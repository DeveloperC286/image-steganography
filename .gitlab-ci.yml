stages:
  - clean-git-history-checking
  - conventional-commits-linting
  - formatting
  - compiling
  - end-to-end-tests
  - releasing


services:
  - docker:dind


variables:
  DOCKER_HOST: tcp://docker:2375
  EARTHLY_EXEC_CMD: "/bin/sh"


image: earthly/earthly:v0.6.22


clean-git-history-checking:
  stage: clean-git-history-checking
  script:
    # Check all the commits in the branch.
    - earthly --ci +clean-git-history-checking --from "origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}"
  rules:
    - if: $CI_MERGE_REQUEST_ID


conventional-commits-linting:
  stage: conventional-commits-linting
  script:
    # Lint all the commits in the branch.
    - earthly --ci +conventional-commits-linting --from "origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}"
  rules:
    - if: $CI_MERGE_REQUEST_ID


formatting:
  stage: formatting
  script:
    - earthly --ci +check-formatting
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


compiling:
  stage: compiling
  script:
    - earthly --ci +compiling
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


end-to-end-tests:
  stage: end-to-end-tests
  script:
    - earthly --ci +end-to-end-tests
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


releasing:
  stage: releasing
  image: registry.gitlab.com/gitlab-org/release-cli
  before_script:
    - apk add git
  script:
    # If the tag already exist then exit.
    - new_tag=$(cat VERSION)
    - git tag -l | grep -q "^${new_tag}$" && exit 0
    # Where to start generating the release description from.
    - base_commit=$(git rev-list --max-parents=0 HEAD)
    - latest_tag=$(git tag --sort=committerdate | tail -1)
    - description_from="${latest_tag:-${base_commit}}"
    # Generate the release description.
    - release_description=$(git log --format="* %s" ${description_from}.. --no-merges)
    # Create the new release.
    - release-cli create
      --name "${new_tag}"
      --description "${release_description}"
      --tag-name "${new_tag}"
      --ref "${CI_COMMIT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
